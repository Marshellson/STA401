read.table("apnee.csv",sep=",",header=T)->apn
head(apn)#lefichier est correctement chargé avec les noms de colonnes et le bon séparateur
#EX1
poidsh<-apn[apn$sexe==0,"poids"]#poids des hommes
t.test(poidsh,conf.level = 0.9) #ic poids des hommes
poidsf<-apn[apn$sexe==1,"poids"]#poids des femmes
t.test(poidsf,conf.level = 0.9)#ic poids femmes
#deux intervalles qui se recouvrent : dont l'un celui des hommes est même inclus dans l'autre
#indiquant que dans la population étudiée (personnes très corpulentes et souffrant d'apnée du sommeil)
# il y a peu de différence de poids en moyenne entre les hommes et les femmens de cette population.
# Le fait que l'IC des hoemmes soit inclus dans celui des femmes est du au fait que l'échantillon des hommes
# est trois fois plus grand que celui des femmes et donc que l'IC des hommes est plus précis que celui des femmes.
#Conclusion : pas d'effet du sexe sur le poids moyen DANS CETTE POPULATION

#EX2 
var(poidsf) #s'2 chez les femmes = estimation sans biais de la variance theorique  chez les femmes
sd(poidsf)#s' chez les femmes 
#intervalle de confiance pour sigma^2_femmes de niveau 1-alpha
alpha<-0.1
n<-length(poidsf)
Binfvt<-(n-1)*var(poidsf)/qchisq(1-alpha/2,n-1)
Bsupvt<-(n-1)*var(poidsf)/qchisq(alpha/2,n-1)
c(Binfvt,Bsupvt)#affiche les deux bornes alculée de l'IC
#intervalle de confiance pour sigma_femmes de niveau 1-alpha
c(sqrt(Binfvt),sqrt(Bsupvt))

-sqrt(Binfvt)+sqrt(Bsupvt)#amplitude de l'IC sur sigma_f
t.test(poidsf,conf.level = 0.9)$conf.int[2]-t.test(poidsf,conf.level = 0.9)$conf.int[1]#amplitude de l'IC sur mu_f
#l'amplitude de l'IC sur sigma_f est plus grande que celle sur l'ic sur mu_f pour un même niveau de confiance
#==> on estime sigma_f de façon moins précise que mu_f

#EX3 
#p proba de souffrir d'apnée du sommeil dans la population etudiée : population de personnes très corpulentes
#echantillon observé : 1 si apnée 0 sinon (modèle Bernoulli)
x<-apn$apnee
(pest<-sum(x)/length(x))#calcule et affiche l'esb de p
alpha<-0.05
length(x)*pest; length(x)*(1-pest)#l'échantillon est de taille suffisante pour que l'on puisse a^liquer l'IC ASYPTOTIQUE DU COURS
#intervalle de confiance asymptotique vu en cours : attention ici npest
Binfp<-pest-sqrt(pest*(1-pest)/length(x))*qnorm(1-alpha/2) #borne ind de l'ic asymptotique
Bsupp<-pest+sqrt(pest*(1-pest)/length(x))*qnorm(1-alpha/2) #borne sup de l'ic asymptotique
c(Binfp,Bsupp) #affiche l'IC
Bsupp-Binfp #largeur ou amplitude de l'IC
#avec la procédure prop.test on calcule un autre intervalle de conf valable pour des petits échantillons
prop.test(sum(x),length(x), correct=F) #sans correction 
prop.test(sum(x),length(x), correct=F)$conf.int[2]-prop.test(sum(x),length(x), correct=F)$conf.int[1]
prop.test(sum(x),length(x), correct=T)#avec correction
prop.test(sum(x),length(x), correct=T)$conf.int[2]-prop.test(sum(x),length(x), correct=F)$conf.int[1]
#les deux intervalles fournis par prop.test sont plus larges que l'intervalle asymptotique qui
#n'a le niveau de confiance requis que pour n=+infini. En pratique il est préférable d'utiliser
#les intervalles fournit par prop.test qui sont de niveau 1-alpha quelle que soit la taille de l'échantillon
#et entre les deux options correct=F ou correct=T on préfèrera correct=T qui est le choix par défaut de R

#A RETENIR POUR L'USAGE SUR DES ECHANTILLONS DE TOUTES TAILLES : ON CALCULE L'IC AVEC PROP.TEST ET NON AVEC 
#L'INTERVALLE ASYMPTOTIQUE DEMONTRE EN COURS.



#EX4-5-6
a<-10
N<-10000
n<-100
dataU<-matrix(runif(n*N,min=0,max=a),ncol=n)
echT1<-rowMeans(dataU)*2
echT2<-apply(dataU,1,max)
echT3<-echT2*(n+1)/n

#EX4
mean(echT2)-a #approche le biais de T2 pour N qui tend vers l'infini
mean(echT3)-a # approche le biais de T1 pour N qui tend vers l'infini
#T2 est biaisé surtout pour des echantillons de petite taille (n=10 par ex) alors que T3 ne l'est pas
#===> On préfèrera bien sur le moins biaisé des deux soit T2

# EX5

curve(n*(n/(n+1))^n*x^(n-1)/a^n,from=0,to=a*(n+1)/n,col=2,ylim=c(0,n/a))#densité de la loi de T3 sur [0, (n+1)a/n]à admettre
curve(n*x^(n-1)/a^n,from=0,to=a,add=T) #densité de la loi T2 sur [0,a] calcul à admettre
curve(0*x,a,a*(n+1)/n,add=T)#densité de T2 sur [a,a(n+1)/n]#densité de la loi de T2 
abline(v=a,lty=2)
abline(v=a*(n+1)/n,lty=3,col=2)
points(a*(n+1)/n,0,col=2) 
segments(0,0,a*(n+1)/n,0,col=2,lwd = 0.5) #intervalle support de la densité de T3 : la surface sous la rouge et sur cet intervalle vaut 1
abline(v=0,h=0)#axes des ordonnées et des abscisses
#quantile d'ordre alpha de T3 noté ici t et qui satisfait P(T3<t)=alpha 
alpha=0.05
t<-a*(n+1)/n*alpha^(1/n)
points(t,0,col=2)
abline(v=t,col=2,lty=3)
#la surface délimitée par les deux verticale en pointillés rouges le tracé de la fonction rouge et l'axe des abscisse vaut
#1-alpha c'est à dire que P(t<T3<a*(n+1)/n)=1-alpha ce qui peut aussi s'écrire P(T3 n/(n+1)<a<T3 alpha^(-1/n)*n/(n+1))
#ou en d'autres termes que [T3* n/(n+1); T3*alpha^(-1/n)*n/(n+1)] est un IC de niveau 1-alpha pour a on le vérifie
#numériquement avec :
BinfT3<-echT3*n/(n+1)
BsupT3<-echT3*n*alpha^(-1/n)/(n+1)
mean((BinfT3<a)&(a<BsupT3)) #il est bien de niveau 1-alpha
mean(BsupT3-BinfT3)#amplitude moyenne sur les N intervalles calculés et basés sur T3

EX6 
#si on compare avec l'intervalle basé sur T1 qui de plus n'est correct que si n est grand
u<-qnorm(1-alpha/2)
Binf<-echT1*sqrt(3*n)/(sqrt(3*n)+u)
Bsup<-echT1*sqrt(3*n)/(sqrt(3*n)-u)
mean((Binf<a)&(Bsup>a))#on est bien au niveau 1-alpha
mean(Bsup-Binf)#l'intervalle produit avec T1 est en moyenne presque 10 fois plus large que celui produit avec T3

#c'est sans appel : pour estimer (ponctuellement ou par intervalle) a dans un modèle uniforme
#T3 est bien meilleur que T1 qui en plus ne s'applique que pour de grandes tailles n d'échantillons.



